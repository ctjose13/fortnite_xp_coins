{"version":3,"sources":["src/utils/scaling.js","src/styles/index.js","src/components/FilterItem.js","src/components/FilterButton.js","src/context/createDataContext.js","src/firebase/index.js","src/firebase/firebaseConfig.js","src/context/MapContext.js","src/components/Filter.js","src/utils/requireImage.js","src/components/XpCoins.js","src/utils/getInAppCoinPosition.js","src/components/Map.js","src/components/RoundButton.js","src/components/InfoButton.js","src/screens/MapScreen.js","src/screens/SplashScreen.js","App.js","web-build/register-service-worker.js","assets/images/xp_coin_green_notCollected.png","assets/images/xp_coin_blue_notCollected.png","assets/images/xp_coin_purple_notCollected.png","assets/images/xp_coin_gold_notCollected.png","assets/images/xp_coin_green_collected.png","assets/images/xp_coin_blue_collected.png","assets/images/xp_coin_purple_collected.png","assets/images/xp_coin_gold_collected.png","assets/images/map.png"],"names":["Platform","OS","Dimensions","get","width","height","shortDimension","scale","size","moderateScale","factor","Colors","Typography","HEADER","fontSize","color","fontFamily","BUTTON","FILTER_ITEM","lineHeight","Sizes","BASE_SPACING","BORDER_RADIUS","ICON_ROUND_BUTTON","ICON_FILTER_ITEM","ROUND_BUTTON","COIN_BASE_WIDTH","COIN_BASE_HEIGHT","MAP_BASE_SIZE","SHADOW","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","FilterItem","label","checked","header","last","onPress","onPressIcon","containerExtraStyle","backgroundColor","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","textStyle","iconColor","TouchableOpacity","View","style","styles","container","Text","Feather","name","propTypes","PropTypes","string","bool","func","defaultProps","StyleSheet","create","flexDirection","alignItems","justifyContent","borderColor","padding","FilterButton","iconButton","borderRadius","textContainer","numberOfLines","marginBottom","marginRight","flex","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","mapContextInitialState","isOnline","mapUrl","coins","coinsStatus","filters","week1","week2","week3","week4","week5","week6","week7","week8","week9","week10","green","blue","purple","gold","collected","notCollected","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","createDataContext","type","payload","setFilters","updatedFilters","newValue","a","async","newFilters","forEach","f","AsyncStorage","setItem","JSON","stringify","updateCoinStatus","id","newStatus","newCoinsStatus","map","c","status","getInitialData","callback","require","coinsRef","ref","getDownloadURL","coinsUrl","fetch","json","mapRef","Image","prefetch","getItem","parse","find","s","push","oldestCoinId","Math","min","parseInt","Infinity","filter","Filter","headerLabel","useState","visibility","setVisibility","useContext","MapContext","filterData","getFilterData","availableWeeks","week","MaterialCommunityIcons","Modal","visible","transparent","animationType","onRequestClose","TouchableWithoutFeedback","modalContainer","modalSurface","newFilterValue","item","filtersToUpdate","renderHeader","FlatList","renderItem","index","includes","data","keyExtractor","types","oneOf","requireImage","position","zIndex","xpCoin","XpCoins","mapZoomLevel","coin","newStatusOnPress","x","y","pxRatio","PixelRatio","xApp","yApp","getInAppCoinPosition","coords","left","top","convertedLeft","convertedTop","source","Map","zoomLevel","pan","useRef","Animated","ValueXY","current","panResponder","PanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","flattenOffset","transform","translateX","translateY","panHandlers","resizeMode","RoundButton","icon","InfoButton","text","textAlign","screenContainer","bottomButtonsContainer","bottom","right","infoContainer","filtersContainer","paddingLeft","paddingTop","offlineZoomContainer","offlineContainer","alignSelf","offlineTextStyle","zoomContainer","marginTop","MapScreen","setZoomLevel","SafeAreaView","uri","SplashScreen","ActivityIndicator","LogBox","ignoreLogs","App","initialDataLoaded","setInitialDataLoaded","useFonts","LuckiestGuy_400Regular","fontsLoaded","useEffect","document","body","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"84DAS0C,QAAhBA,IAASC,GACLC,IAAWC,IAAI,UACfD,IAAWC,IAAI,UAFrCC,E,EAAAA,MAAOC,E,EAAAA,O,EAIyBD,EAAQC,EAAS,CAACD,EAAOC,GAAU,CAACA,EAAQD,G,WAA7EE,E,KASDC,G,KAAQ,SAAAC,GAAI,OAAIF,EAHK,IAGiCE,IAEtDC,EAAgB,SAACD,GAAD,IAAOE,EAAP,uDAAgB,GAAhB,OAAwBF,GAAQD,EAAMC,GAAQA,GAAQE,GCd/DC,EACF,OADEA,EAEC,OAFDA,EAGF,UAHEA,EAIA,OAJAA,EAKF,UALEA,EAMA,OANAA,EAOH,OAPGA,EAQO,sBARPA,EASC,UAODC,EAAa,CACxBC,OAAQ,CACNC,SAAWL,EAAc,IACzBM,MAAOJ,EACPK,WAAY,0BAEdC,OAAQ,CACNH,SAAWL,EAAc,IACzBM,MAAOJ,EACPK,WAAY,0BAEdE,YAAa,CACXJ,SAAWL,EAAc,IACzBM,MAAOJ,EACPK,WAAY,yBACZG,WAAYV,EAAc,MASjBW,EAAQ,CACnBC,aAAcZ,EAAc,IAC5Ba,cAAeb,EAAc,GAC7Bc,kBAAmBd,EAAc,IACjCe,iBAAkBf,EAAc,IAChCgB,aAAchB,EAAc,IAC5BiB,gBAAiBjB,EAAc,IAC/BkB,iBAAkBlB,EAAc,IAChCmB,cAAetB,EACfuB,OAAQ,CACNC,YAAa,OACbC,aAAc,CACZ3B,MAAO,EACPC,OAAQ,GAEV2B,cAAe,IACfC,aAAc,KAEdC,UAAW,IC/CTC,EAAa,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAErDC,EAAsB,CAC1BC,gBAAiBL,EAAS3B,EAAgBA,EAC1CiC,oBAAqBN,EAASlB,EAAME,cAAgB,EACpDuB,qBAAsBP,EAASlB,EAAME,cAAgB,EACrDwB,kBAAoBR,GAAUC,EAAO,EAAI,EACzCQ,uBAAwBR,EAAOnB,EAAME,cAAgB,EACrD0B,wBAAyBT,EAAOnB,EAAME,cAAgB,GAElD2B,EAAYX,EAAS1B,EAAWC,OAASD,EAAWM,YACpDgC,EAAYZ,EAAS3B,EAAmBA,EAE9C,OACE,kBAACwC,EAAA,EAAD,CAAkBX,QAASA,GACzB,kBAACY,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,UAAWb,IAE9B,kBAACc,EAAA,EAAD,CAAMH,MAAOJ,GAAYb,GAEzB,kBAACe,EAAA,EAAD,CAAkBX,QAASC,GACzB,kBAACgB,EAAA,EAAD,CACEC,KAAMrB,EAAU,eAAiB,SACjC7B,KAAMY,EAAMI,iBACZT,MAAOmC,QASnBf,EAAWwB,UAAY,CACrBvB,MAAOwB,IAAUC,OACjBxB,QAASuB,IAAUE,KACnBxB,OAAQsB,IAAUE,KAClBvB,KAAMqB,IAAUE,KAChBtB,QAASoB,IAAUG,KACnBtB,YAAamB,IAAUG,MAGzB5B,EAAW6B,aAAe,CACxB5B,MAAO,GACPC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,QAAS,aACTC,YAAa,cAIf,IAAMa,EAASW,IAAWC,OAAO,CAC/BX,UAAW,CACTY,cAAe,MACfC,WAAY,SACZC,eAAgB,gBAChBC,YAAa3D,EACb4D,QAASnD,EAAMC,gBAIJc,I,ikBCpEf,IAAMqC,EAAe,SAAC,GAAoC,IAAlCpC,EAAiC,EAAjCA,MAAOI,EAA0B,EAA1BA,QAASiC,EAAiB,EAAjBA,WAEtC,OACE,kBAACtB,EAAA,EAAD,CAAkBX,QAASA,EAASa,MAAO,CAAEqB,aAAc,MACzD,kBAACtB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WACjBkB,EACD,kBAACrB,EAAA,EAAD,CAAMC,MAAOC,EAAOqB,eAClB,kBAACnB,EAAA,EAAD,CAAMoB,cAAe,EAAGvB,MAAOC,EAAOlB,OAAQA,OAOxDoC,EAAaR,aAAe,CAC1B5B,MAAO,GACPI,QAAS,aACTiC,WAAY,MAId,IAAMnB,EAASW,IAAWC,OAAO,CAC/BX,UAAU,EAAD,CACPY,cAAe,MACfC,WAAY,SACZC,eAAgB,gBAChBE,QAASnD,EAAMC,aACfqD,aAAc,IACd/B,gBAAiBhC,EACjBkE,aAAczD,EAAMC,aACpByD,YAAa1D,EAAMC,cAGhBD,EAAMS,QAEXO,MAAM,EAAD,GACAxB,EAAWK,QAEhB0D,cAAe,CACbI,KAAM,EACNX,WAAY,YAIDI,I,ioBCnDA,I,iBCGc,IAAzBQ,QAAcC,QAChBD,iBCVa,CACbE,OAAQ,0CACRC,WAAY,+CACZC,YAAa,sDACbC,UAAW,+BACXC,cAAe,2CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDKV,IAAMC,GAAUV,a,qkBEHvB,IA4HMW,GAAyB,CAC7BC,UAAU,EACVC,OAAQ,GACRC,MAAO,GACPC,YAAa,GACbC,QAAS,CACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,QAAQ,EAERC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,MAAM,EAENC,WAAW,EACXC,cAAc,I,GHvJH,SAACC,EAASC,EAASC,GAChC,IAAMC,EAAUC,IAAMC,gBAetB,MAAO,CAAEF,UAASG,SAbD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,qBAAWR,EAASE,GADb,WAC1BO,EAD0B,KACnBC,EADmB,KAG3BC,EAAe,GACrB,IAAK,IAAIC,KAAOX,EACdU,EAAaC,GAAOX,EAAQW,GAAKF,EAAUD,GAG7C,OAAO,kBAACN,EAAQG,SAAT,CAAkBO,MAAK,IAAIJ,SAAUE,IACvCJ,KG+I4BO,EAvJlB,SAACL,EAAD,GAA+B,IAArBM,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjC,OAAQD,GACN,IAAK,cACH,OAAO,SAAKN,GAAZ,IAAmB1B,QAASiC,IAE9B,IAAK,qBACH,OAAO,SAAKP,GAAZ,IAAmB3B,YAAakC,IAElC,IAAK,mBACH,OAAO,SACFP,GADL,IAEE5B,MAAOmC,EAAQnC,MACfE,QAASiC,EAAQjC,QACjBD,YAAakC,EAAQlC,YACrBF,OAAQoC,EAAQpC,OAChBD,SAAUqC,EAAQrC,WAGtB,QACE,OAAO8B,KAsIX,CAAEQ,WA7He,SAACP,EAAUD,GAAX,OAAqB,SAAOS,EAAgBC,GAAvB,eAAAC,EAAAC,OAAA,uDAClCC,EADkC,MAChBb,EAAM1B,SAC5BmC,EAAeK,SAAS,SAAAC,GAAC,OAAIF,EAAWE,GAAKL,KAFP,WAAAC,EAAA,MAGhCK,KAAaC,QAAQ,UAAWC,KAAKC,UAAUN,KAHf,OAKtCZ,EAAS,CAAEK,KAAM,cAAeC,QAASM,IALH,8DA6HxBO,iBAlHS,SAACnB,EAAUD,GAAX,OAAqB,SAAOqB,EAAIC,GAAX,eAAAX,EAAAC,OAAA,uDAE5CW,GADIA,EADwC,IACnBvB,EAAM3B,cACCmD,KAAK,SAAAC,GAAC,OACpCA,EAAEJ,KAAOA,EAAT,SACSI,GADT,IACYC,OAAQJ,IAChBG,KALsC,WAAAd,EAAA,MAOtCK,KAAaC,QAAQ,cAAeC,KAAKC,UAAUI,KAPb,OAS5CtB,EAAS,CAAEK,KAAM,qBAAsBC,QAASgB,IATJ,8DAkHZI,eApGX,SAAA1B,GAAQ,OAAI,SAAO2B,GAAP,+BAAAjB,EAAAC,OAAA,mDAE7BzC,EAAS,GACTD,GAAW,EAHkB,SAMX,QAAhB5F,IAASC,GANkB,gBAQ7B6F,EAAQyD,EAAQ,KARa,8BAUvBC,EAAW9D,GAAQ+D,IAAI,iBAVA,YAAApB,EAAA,MAWNmB,EAASE,kBAXH,eAWvBC,EAXuB,mBAAAtB,EAAA,MAYfuB,MAAMD,IAZS,eAY7B7D,EAZ6B,mBAAAuC,EAAA,MAafvC,EAAM+D,QAbS,eAa7B/D,EAb6B,OAgBvBgE,EAASpE,GAAQ+D,IAAI,WAhBE,YAAApB,EAAA,MAiBdyB,EAAOJ,kBAjBO,eAiB7B7D,EAjB6B,mBAAAwC,EAAA,MAkBvB0B,KAAMC,SAASnE,IAlBQ,QAqBjCD,GAAW,EArBsB,kDAwB/BE,EAAQyD,EAAQ,KAChB3D,GAAW,EAzBoB,2BAAAyC,EAAA,MA4BbK,KAAauB,QAAQ,YA5BR,eA4B7BjE,EA5B6B,mBAAAqC,EAAA,MA6BTK,KAAauB,QAAQ,gBA7BZ,QA6B7BlE,EA7B6B,OAiC7BC,IAASA,EAAU4C,KAAKC,UAAUlD,GAAuBK,UACzDD,IAAaA,EAAc6C,KAAKC,UAAUlD,GAAuBI,cAErEC,EAAU4C,KAAKsB,MAAMlE,GACrBD,EAAc6C,KAAKsB,MAAMnE,GAGzBD,EAAM0C,SAAQ,SAAAW,GACRpD,EAAYoE,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOI,EAAEJ,OACnChD,EAAYsE,KAAK,CACftB,GAAII,EAAEJ,GACNK,OAAQ,qBAMRkB,EAAeC,KAAKC,IAAL,MAAAD,KAAI,IAAQzE,EAAMoD,KAAI,SAAAC,GAAC,OAAIsB,SAAStB,EAAEJ,YACtC2B,MACnB3E,EAAcA,EAAY4E,QAAO,SAAAxB,GAAC,OAAIsB,SAAStB,EAAEJ,KAAOuB,MAG1D3C,EAAS,CACPK,KAAM,mBACNC,QAAS,CACPnC,QACAE,UACAD,cACAF,SACAD,cAIJ0D,IAlEiC,oEAqGjC3D,IAHa4B,G,GAAAA,SAAUH,G,GAAAA,Q,UC3GnBwD,GAAS,SAAC,GAAc,IAOxBC,EACApG,EARYuD,EAAW,EAAXA,KAAW,EACS8C,oBAAS,GADlB,WACpBC,EADoB,KACRC,EADQ,OAEwBC,qBAAWC,IAFnC,IAEnBxD,MAAS1B,EAFU,EAEVA,QAASF,EAFC,EAEDA,MAAUoC,EAFT,EAESA,WAE9BiD,EAtCc,SAAAnD,GACpB,OAAQA,GACN,IAAK,OACH,MAAO,CACL,CAAEe,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,QAAS3G,MAAO,YACtB,CAAE2G,GAAI,SAAU3G,MAAO,cAE3B,IAAK,QACH,MAAO,CACL,CAAE2G,GAAI,QAAS3G,MAAO,SACtB,CAAE2G,GAAI,OAAQ3G,MAAO,QACrB,CAAE2G,GAAI,SAAU3G,MAAO,QACvB,CAAE2G,GAAI,OAAQ3G,MAAO,YAEzB,IAAK,SACH,MAAO,CACL,CAAE2G,GAAI,YAAa3G,MAAO,YAC1B,CAAE2G,GAAI,eAAgB3G,MAAO,oBAEjC,QACE,MAAO,IAUQgJ,CAAcpD,GAC3BqD,EAAiBvF,EAAMoD,KAAI,SAAAC,GAAC,OAAIA,EAAEmC,QAIxC,OAAQtD,GACN,IAAK,OACH6C,EAAc,UACdpG,EAAa,kBAAChB,EAAA,EAAD,CAASC,KAAK,WAAWlD,KAAM,GAAIO,MAAOJ,IACvD,MACF,IAAK,QACHkK,EAAc,QACdpG,EAAa,kBAAC8G,GAAA,EAAD,CAAwB7H,KAAK,kBAAkBlD,KAAM,GAAIO,MAAOJ,IAC7E,MACF,IAAK,SACHkK,EAAc,SACdpG,EAAa,kBAAChB,EAAA,EAAD,CAASC,KAAK,QAAQlD,KAAM,GAAIO,MAAOJ,IACpD,MACF,QACEkK,EAAc,GACdpG,EAAa,KA8BjB,OACE,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAAE0B,KAAK,IAClB,kBAAC,EAAD,CACE3C,MAAOyI,EACPrI,QAAS,kBAAMwI,GAAc,IAC7BvG,WAAYA,IAEd,kBAAC+G,EAAA,EAAD,CACEC,QAASV,EACTW,aAAW,EACXC,cAAc,QACdC,eAAgB,kBAAMZ,GAAc,KAEpC,kBAACa,EAAA,EAAD,CAA0BrJ,QAAS,kBAAMwI,GAAc,KACrD,kBAAC5H,EAAA,EAAD,CAAMC,MAAOC,GAAOwI,gBAClB,kBAAC1I,EAAA,EAAD,CAAMC,MAAOC,GAAOyI,cAzCT,WACnB,IACMC,EAA+C,IAD1Bb,EAAWR,QAAQ,SAAAsB,GAAI,OAAKjG,EAAQiG,EAAKlD,OAC1B9D,OACpCiH,EAAkBf,EAAWjC,KAAI,SAAAT,GAAC,OAAIA,EAAEM,MAE9C,OAAO,kBAAC,EAAD,CACCzG,QAAM,EACND,SAAU2J,EACV5J,MAAOyI,EACPpI,YAAa,kBAAMyF,EAAWgE,EAAiBF,MAiC5CG,GACD,kBAACC,EAAA,EAAD,CACEC,WA/BK,SAAC,GAAqB,IAAnBJ,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,MACpBjK,EAAU2D,EAAQiG,EAAKlD,IAC7B,MAAgB,SAATf,GAAoBqD,EAAekB,SAASN,EAAKlD,IAE9C,kBAAC,EAAD,CACE3G,MAAO6J,EAAK7J,MACZG,KAAM+J,IAAUnB,EAAWlG,OAAO,EAClC5C,QAASA,EACTG,QAAS,kBAAM0F,EAAW,CAAC+D,EAAKlD,KAAM1G,IACtCI,YAAa,kBAAMyF,EAAW,CAAC+D,EAAKlD,KAAM1G,MAN5C,MA6BEmK,KAAMrB,EACNsB,aAAc,SAAAR,GAAI,OAAIA,EAAKlD,YAU3C6B,GAAOjH,UAAY,CACjB+I,MAAO9I,IAAU+I,MAAM,CAAC,OAAQ,QAAS,YAG3C/B,GAAO5G,aAAe,CACpBgE,KAAM,QAIR,IAAM1E,GAASW,IAAWC,OAAO,CAC/B4H,eAAgB,CACd/G,KAAM,EACNpC,gBAAiBhC,EACjByD,WAAY,SACZC,eAAgB,UAElB0H,aAAc,CACZpJ,gBAAiBhC,EACjB+D,aAActD,EAAME,cACpBlB,MAAwB,GAAjBE,KAIIsK,M,sCC7JFgC,GAAe,SAAClJ,GAC3B,OAAQA,GACN,IAAK,6BACH,OAAO6F,EAAQ,KACjB,IAAK,4BACH,OAAOA,EAAQ,KACjB,IAAK,8BACH,OAAOA,EAAQ,KACjB,IAAK,4BACH,OAAOA,EAAQ,KACjB,IAAK,0BACH,OAAOA,EAAQ,KACjB,IAAK,yBACH,OAAOA,EAAQ,KACjB,IAAK,2BACH,OAAOA,EAAQ,KACjB,IAAK,yBACH,OAAOA,EAAQ,KACjB,QACE,OAAO,O,SC2BPjG,GAASW,IAAWC,OAAO,CAC/BX,UAAW,CACTsJ,SAAU,WAGVC,OAAQ,GAEVC,OAAQ,KAMKC,GA9CC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACiChC,qBAAWC,IAD5C,IAC5BxD,MAAS5B,EADmB,EACnBA,MAAOC,EADY,EACZA,YAAaC,EADD,EACCA,QAAW8C,EADZ,EACYA,iBA4BhD,OAAOhD,EAAMoD,KA1BM,SAAAgE,GACjB,IAAM9D,EAASrD,EAAYoE,MAAK,SAAAhB,GAAM,OAAOA,EAAEJ,KAAOmE,EAAKnE,MAAMK,OAC3D+D,EAA8B,cAAX/D,EAAyB,eAAiB,YAF1C,ECRO,SAACgE,EAAGC,EAAGJ,GAEzC,IAAMK,EAAUC,KAAWpN,MAMrBI,EAAQa,EAAMQ,cAJF,KAI0B0L,EACxCE,EAAOJ,EAAEE,EAAQ/M,EACjBkN,EAAOJ,EAAEC,EAAQ/M,EAOrB,MAAO,CAHPiN,GAAcpM,EAAMM,gBAAkBuL,EAAe,EACrDQ,GAAcrM,EAAMO,iBAAmBsL,GDHCS,CAAqBR,EAAKS,OAAOC,KAAMV,EAAKS,OAAOE,IAAKZ,GAJrE,WAIlBa,EAJkB,KAIHC,EAJG,KAMzB,OACE/H,EAAQkH,EAAKnM,QAAUiF,EAAQkH,EAAK5B,OAAStF,EAAQoD,GAClD,kBAACjG,EAAA,EAAD,CACDE,MAAO,CAACC,GAAOC,UAAW,CAAEqK,KAAME,EAAeD,IAAKE,IACtDvL,QAAS,kBAAKsG,EAAiBoE,EAAKnE,GAAIoE,IACxCtF,IAAKqF,EAAKnE,IAER,kBAACgB,GAAA,EAAD,CACE1G,MAAO,CACLC,GAAOyJ,OACP,CAAE3M,MAAOgB,EAAMM,gBAAkBuL,EAAc5M,OAAQe,EAAMO,iBAAmBsL,IAElFe,OAAQpB,GAAa,WAAWM,EAAKnM,MAAjB,IAA0BqI,MAGlD,SEuBF9F,GAASW,IAAWC,OAAO,CAC/BX,UAAW,CACTc,eAAgB,SAChBD,WAAY,UAId8E,IAAK,CACH9I,MAAOgB,EAAMQ,cACbvB,OAAQe,EAAMQ,iBAIHqM,GA/DH,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAWF,EAAa,EAAbA,OAClBG,EAAMC,iBAAO,IAAIC,KAASC,QAAQ,CAAClB,EAAG,EAAGC,EAAG,KAAKkB,QAEjDC,EAAeJ,iBACnBK,KAAavK,OAAO,CAClBwK,4BAA6B,kBAAM,GACnCC,oBAAqB,WACnBR,EAAIS,UAAU,CACZxB,EAAGe,EAAIf,EAAEyB,OACTxB,EAAGc,EAAId,EAAEwB,SAEXV,EAAIW,SAAS,CAAE1B,EAAG,EAAGC,EAAG,KAK1B0B,mBAAoBV,KAASW,MAC3B,CACE,KACA,CAAEC,GAAId,EAAIf,EAAG8B,GAAIf,EAAId,IAEvB,CAAE8B,iBAAiB,IAErBC,sBAAuB,WACrBjB,EAAIkB,oBAGRd,QAEF,OACE,kBAACF,GAAA,EAASjL,KAAV,MACIC,MAAO,CACLC,GAAOC,UACP,CAAE+L,UAAW,CAAC,CAAEC,WAAYpB,EAAIf,GAAK,CAAEoC,WAAYrB,EAAId,GAAK,CAAE9M,MAAO2N,OAEnEM,EAAaiB,aAEnB,kBAACrM,EAAA,EAAD,KACE,kBAAC2G,GAAA,EAAD,CACE2F,WAAW,UACXrM,MAAOC,GAAO4F,IACd8E,OAAQA,IAEV,kBAAC,GAAD,CAASf,aAAciB,O,+NC5C/B,IAAMyB,GAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMpN,EAAc,EAAdA,QAE3B,OACE,kBAACW,EAAA,EAAD,CAAkBX,QAASA,GACzB,kBAACY,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAClB,kBAACE,EAAA,EAAD,CAASC,KAAMkM,EAAMpP,KAAMY,EAAMG,kBAAmBR,MAAOJ,OAMnEgP,GAAY3L,aAAe,CACzB4L,KAAM,UACNpN,QAAS,cAIX,IAAMc,GAASW,IAAWC,OAAO,CAC/BX,U,mWAAU,EACRa,WAAY,SACZC,eAAgB,SAChBjE,MAAOgB,EAAMK,aACbpB,OAAQe,EAAMK,aACdiD,aAAc,IACd/B,gBAAiBhC,GACdS,EAAMS,UAIE8N,M,qkBC/Bf,IAAME,GAAa,WAAO,IAAD,EACW/E,oBAAS,GADpB,WAClBC,EADkB,KACNC,EADM,KAGvB,OACE,kBAAC5H,EAAA,EAAD,CAAMC,MAAO,CAAE0B,KAAK,IAClB,kBAAC,GAAD,CACE6K,KAAK,OACLpN,QAAS,kBAAMwI,GAAc,MAE/B,kBAACQ,EAAA,EAAD,CACEC,QAASV,EACTW,aAAW,EACXC,cAAc,QACdC,eAAgB,kBAAMZ,GAAc,KAEpC,kBAACa,EAAA,EAAD,CAA0BrJ,QAAS,kBAAMwI,GAAc,KACrD,kBAAC5H,EAAA,EAAD,CAAMC,MAAOC,GAAOwI,gBAClB,kBAAC1I,EAAA,EAAD,CAAMC,MAAOC,GAAOyI,cACpB,kBAACvI,EAAA,EAAD,CAAMH,MAAOC,GAAOwM,MAApB,oOAWZD,GAAW7L,aAAe,CACxB4L,KAAM,UACNpN,QAAS,cAIX,IAAMc,GAASW,IAAWC,OAAO,CAC/B4H,eAAgB,CACd/G,KAAM,EACNpC,gBAAiBhC,EACjByD,WAAY,SACZC,eAAgB,UAElB0H,aAAc,CACZpJ,gBAAiBhC,EACjB+D,aAActD,EAAME,cACpBlB,MAAwB,GAAjBE,EACPiE,QAASnD,EAAMC,cAEjByO,KAAK,SACAlP,EAAWM,aADZ,IAEF6O,UAAW,aAIAF,M,+NCnDf,IA0CMvM,GAASW,IAAWC,OAAO,CAC/B8L,gBAAiB,CACfjL,KAAM,EACNpC,gBAAiBhC,EACjBwD,cAAe,SACfE,eAAgB,iBAIlB4L,uBAAwB,CACtBpD,SAAU,WACVqD,OAAQ,EACRC,MAAO,EACPvC,KAAM,GAERwC,cAAe,CACbvD,SAAU,WACVgB,IAAKzM,EAAMC,aACX8O,MAAO/O,EAAMC,aACbyL,OAAQ,GAEVuD,iBAAkB,CAChBlM,cAAe,MACfmM,YAAalP,EAAMC,aACnBkP,WAAYnP,EAAMC,cAIpBmP,qBAAsB,CACpBrM,cAAe,MACfmM,YAAalP,EAAMC,aACnBgD,eAAgB,YAIlBoM,iBAAkB,CAChB1L,KAAK,EACL2L,UAAW,YAIbC,iB,mWAAiB,IACZ/P,EAAWK,QAEhB2P,cAAe,CACbF,UAAW,WACXG,UAAWzP,EAAMC,aACjByD,YAAa1D,EAAMC,gBAORyP,GAhGG,WAAO,IAAD,EACYhG,mBAAS,GADrB,WACfoD,EADe,KACJ6C,EADI,OAEkB9F,qBAAWC,IAA3CxD,MAAS7B,EAFK,EAELA,OAAQD,EAFH,EAEGA,SAEzB,OACE,kBAACoL,EAAA,EAAD,CAAc3N,MAAOC,GAAO0M,iBAC1B,kBAAC5M,EAAA,EAAD,CAAMC,MAAO,CAAE0B,KAAK,IAClB,kBAAC,GAAD,CACEmJ,UAAWA,EACXF,OAAQnI,EAAS,CAACoL,IAAKpL,GAAU0D,EAAQ,OAE3C,kBAACnG,EAAA,EAAD,CAAMC,MAAOC,GAAO8M,eAClB,kBAAC,GAAD,OAEF,kBAAChN,EAAA,EAAD,CAAMC,MAAOC,GAAO2M,wBAClB,kBAAC7M,EAAA,EAAD,CAAMC,MAAOC,GAAOsN,eAClB,kBAAC,GAAD,CAAahB,KAAK,UAAUpN,QAAS,kBAAMuO,EAAa,OAE1D,kBAAC3N,EAAA,EAAD,CAAMC,MAAOC,GAAOkN,sBAChB5K,EACE,KACA,kBAACxC,EAAA,EAAD,CAAMC,MAAOC,GAAOmN,kBAClB,kBAACjN,EAAA,EAAD,CAAMH,MAAOC,GAAOqN,kBACjB,uDAIT,kBAACvN,EAAA,EAAD,CAAMC,MAAOC,GAAOsN,eAClB,kBAAC,GAAD,CAAahB,KAAK,WAAWpN,QAAS,kBAAMuO,EAAa,QAG7D,kBAAC3N,EAAA,EAAD,CAAMC,MAAOC,GAAO+M,kBAChB,kBAAC,GAAD,CAAQrI,KAAK,SACb,kBAAC,GAAD,CAAQA,KAAK,UACb,kBAAC,GAAD,CAAQA,KAAK,gB,SC5BrB1E,GAASW,IAAWC,OAAO,CAC/B8L,gBAAiB,CACfjL,KAAM,EACNpC,gBAAiBhC,EACjB0D,eAAgB,SAChBD,WAAY,YAID8M,GAnBM,WAEnB,OACE,kBAACF,EAAA,EAAD,CAAc3N,MAAOC,GAAO0M,iBAC1B,kBAACmB,GAAA,EAAD,CAAmB3Q,KAAK,QAASO,MAAM,W,8BCL1B,YAAhBf,IAASC,IAAkBmR,UAAOC,WAAW,CAAC,+BAEjD,IAAMC,GAAM,WAAO,IAAD,EACkCxG,oBAAS,GAD3C,WACTyG,EADS,KACUC,EADV,KAERnI,EAAmB4B,qBAAWC,IAA9B7B,eAFQ,EAGIoI,aAAS,CAAEC,8BAA1BC,EAHW,YAYhB,OANAC,qBAAU,WACW,QAAhB5R,IAASC,KAAc4R,SAASC,KAAKzO,MAAQ,4BAChDgG,GAAe,kBAAMmI,GAAqB,QAEzC,IAEID,GAAqBI,EAAc,kBAAC,GAAD,MAAe,kBAAC,GAAD,OAG5C,eACb,OAAO,kBAAC,KAAD,KACL,kBAAC,GAAD,KACE,kBAAC,GAAD,U,+DC5BF,kBAAmBI,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,4CAA6C,CAAEC,MAAO,wBAC/DC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,U,oBCV1DE,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/app.d2472881.chunk.js","sourcesContent":["//\r\n// This file exports useful functions for adapting the components for different screen sizes\r\n//\r\n// This code was adapted from https://github.com/nirsky/react-native-size-matters\r\n//\r\n\r\nimport { Dimensions, Platform } from 'react-native';\r\n\r\n// workaround for \"very small shortDimension\" bug\r\nconst { width, height } = Platform.OS === 'ios' \r\n                            ? Dimensions.get('screen') \r\n                            : Dimensions.get('window');\r\n\r\nconst [shortDimension, longDimension] = width < height ? [width, height] : [height, width];\r\n\r\nconst screenWidth = width;\r\nconst screenHeight = height;\r\n\r\n//Default guideline sizes are based on standard ~5\" screen mobile device\r\nconst guidelineBaseWidth = 350;\r\nconst guidelineBaseHeight = 680;\r\n\r\nconst scale = size => shortDimension / guidelineBaseWidth * size;\r\nconst verticalScale = size => longDimension / guidelineBaseHeight * size;\r\nconst moderateScale = (size, factor = 0.2) => size + (scale(size) - size) * factor;\r\nconst moderateVerticalScale = (size, factor = 0.2) => size + (verticalScale(size) - size) * factor;\r\n\r\nexport { scale, verticalScale, moderateScale, moderateVerticalScale, \r\n  screenWidth, screenHeight, shortDimension, longDimension};\r\n","//\r\n// This file exports all styles used in the app\r\n//\r\n\r\nimport { moderateScale, shortDimension } from '../utils/scaling';\r\n\r\n//\r\n// COLORS\r\n//\r\n\r\nexport const Colors = {\r\n  SURFACE: '#fff',\r\n  ON_SURFACE: '#000',\r\n  HEADER : '#0c71b5',\r\n  ON_HEADER: '#fff',\r\n  BUTTON : '#2a2a2a',\r\n  ON_BUTTON: '#fff',\r\n  BORDER: '#ddd',\r\n  MODAL_BACKGROUND: 'rgba(0, 0, 0, 0.75)',\r\n  BACKGROUND: '#0c71b5',\r\n};\r\n\r\n//\r\n// TEXTS\r\n//\r\n\r\nexport const Typography = {\r\n  HEADER: {\r\n    fontSize:  moderateScale(20),\r\n    color: Colors.ON_HEADER,\r\n    fontFamily: 'LuckiestGuy_400Regular',\r\n  },\r\n  BUTTON: {\r\n    fontSize:  moderateScale(12),\r\n    color: Colors.ON_BUTTON,\r\n    fontFamily: 'LuckiestGuy_400Regular',\r\n  },\r\n  FILTER_ITEM: {\r\n    fontSize:  moderateScale(14),\r\n    color: Colors.ON_SURFACE,\r\n    fontFamily: 'LuckiestGuy_400Regular',\r\n    lineHeight: moderateScale(21),\r\n  },\r\n  // SMALL: ... // not used yet\r\n};\r\n\r\n//\r\n// DIMENSIONS\r\n//\r\n\r\nexport const Sizes = {\r\n  BASE_SPACING: moderateScale(10),\r\n  BORDER_RADIUS: moderateScale(5),\r\n  ICON_ROUND_BUTTON: moderateScale(30),\r\n  ICON_FILTER_ITEM: moderateScale(20),\r\n  ROUND_BUTTON: moderateScale(55),\r\n  COIN_BASE_WIDTH: moderateScale(45),\r\n  COIN_BASE_HEIGHT: moderateScale(60), // aspect ratio w:h = 3:4\r\n  MAP_BASE_SIZE: shortDimension,\r\n  SHADOW: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n\r\n    elevation: 3,\r\n  },\r\n};\r\n\r\n","//\r\n// FilterItem is a item of the list showed by Filter\r\n//\r\n// label:   It is the text displayed inside the FilterItem\r\n// checked: If set to true, it shows a checked-square, otherwise it shows a square\r\n// header:  If set to true, it applies styles appropriated for headers \r\n//          (top border radius, background color, no bottom border width)\r\n// last:    If set to true, it applies styles appropriated for the last item\r\n//          (bottom border radius and no bottom border width)\r\n// onPress:     function called on the user clicks anywhere in the container, except the icon\r\n// onPressIcon: function called when the user clicks on the icon\r\n//\r\n\r\nimport React from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\nimport { Colors, Typography, Sizes } from \"../styles\";\r\n\r\n\r\nconst FilterItem = ({ label, checked, header, last, onPress, onPressIcon}) => {\r\n\r\n  const containerExtraStyle = {\r\n    backgroundColor: header ? Colors.HEADER : Colors.SURFACE,\r\n    borderTopLeftRadius: header ? Sizes.BORDER_RADIUS : 0,\r\n    borderTopRightRadius: header ? Sizes.BORDER_RADIUS : 0,\r\n    borderBottomWidth : header || last ? 0 : 1,\r\n    borderBottomLeftRadius: last ? Sizes.BORDER_RADIUS : 0,\r\n    borderBottomRightRadius: last ? Sizes.BORDER_RADIUS : 0,\r\n  };\r\n  const textStyle = header ? Typography.HEADER : Typography.FILTER_ITEM;\r\n  const iconColor = header ? Colors.ON_HEADER : Colors.ON_SURFACE;\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={[styles.container, containerExtraStyle]}>\r\n\r\n        <Text style={textStyle}>{label}</Text>\r\n\r\n        <TouchableOpacity onPress={onPressIcon}>\r\n          <Feather \r\n            name={checked ? 'check-square' : 'square'} \r\n            size={Sizes.ICON_FILTER_ITEM} \r\n            color={iconColor}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nFilterItem.propTypes = {\r\n  label: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  header: PropTypes.bool,\r\n  last: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n  onPressIcon: PropTypes.func,\r\n}\r\n\r\nFilterItem.defaultProps = {\r\n  label: '',\r\n  checked: false,\r\n  header: false,\r\n  last: false,\r\n  onPress: () => {},\r\n  onPressIcon: () => {},\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderColor: Colors.BORDER,\r\n    padding: Sizes.BASE_SPACING,\r\n  },\r\n});\r\n\r\nexport default FilterItem;\r\n","//\r\n// FilterButton is used in Filter. It is the button that \r\n// makes the modal visible when clicked\r\n//\r\n// label:      It is the string displayed inside the button\r\n// onPress:    It is the function called when the button is clicked\r\n// iconButton: It is the icon show inside the button\r\n//\r\n\r\nimport React from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Colors, Typography, Sizes  } from \"../styles\";\r\n\r\n\r\nconst FilterButton = ({ label, onPress, iconButton }) => {\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress} style={{ borderRadius: 100 }}>\r\n      <View style={styles.container}>\r\n        {iconButton}\r\n        <View style={styles.textContainer}>\r\n          <Text numberOfLines={1} style={styles.label}>{label}</Text>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nFilterButton.defaultProps = {\r\n  label: '',\r\n  onPress: () => {},\r\n  iconButton: null,\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: Sizes.BASE_SPACING,\r\n    borderRadius: 100, // high value to fully round the sides of the button\r\n    backgroundColor: Colors.BUTTON,\r\n    marginBottom: Sizes.BASE_SPACING,\r\n    marginRight: Sizes.BASE_SPACING,\r\n    //borderColor: 'white',\r\n    //borderWidth: 1,\r\n    ...Sizes.SHADOW,\r\n  },\r\n  label: {\r\n    ...Typography.BUTTON,\r\n  },\r\n  textContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  }\r\n});\r\n\r\nexport default FilterButton;\r\n","//\r\n// createDataContext is a useful function to create new contexts\r\n// in this app we have only one, so it is not very useful\r\n//\r\n\r\nimport React, { useReducer } from 'react';\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch, state); // action functions will have access to dispatch and the current state\r\n    }\r\n\r\n    return <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n  };\r\n\r\n  return { Context, Provider };\r\n};","//\r\n// It provides a shortcut to access firebase.storage()\r\n// and it initializes firebase, if it wasn't yet.\r\n// \r\n\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const storage = firebase.storage();\r\n","\r\nexport default {\r\n  apiKey: \"AIzaSyA8GIxWDAF3o0uusuVVOTKLWt5KXi0RZR4\",\r\n  authDomain: \"fortnite-xp-coins-unofficial.firebaseapp.com\",\r\n  databaseURL: \"https://fortnite-xp-coins-unofficial.firebaseio.com\",\r\n  projectId: \"fortnite-xp-coins-unofficial\",\r\n  storageBucket: \"fortnite-xp-coins-unofficial.appspot.com\",\r\n  messagingSenderId: \"310136773208\",\r\n  appId: \"1:310136773208:web:9a3cf89e51d23e0970082d\",\r\n  measurementId: \"G-QWM6X1YW7G\"\r\n};","//\r\n// MapContext is the only Context of the app.\r\n// It has all data related to map, filters and xp coins.\r\n//\r\n\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { Image, Platform } from \"react-native\";\r\nimport createDataContext from './createDataContext';\r\nimport { storage } from '../firebase';\r\n\r\n// REDUCER\r\nconst mapReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case 'set_filters':\r\n      return { ...state, filters: payload };\r\n      \r\n    case 'update_coin_status':\r\n      return { ...state, coinsStatus: payload };\r\n    \r\n    case 'get_initial_data':\r\n      return { \r\n        ...state,\r\n        coins: payload.coins,\r\n        filters: payload.filters, \r\n        coinsStatus: payload.coinsStatus,\r\n        mapUrl: payload.mapUrl,\r\n        isOnline: payload.isOnline,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n// ACTION FUNCTIONS\r\n\r\n// filters: array of filters to be updated\r\n// newValue: true or false\r\nconst setFilters = (dispatch, state) => async (updatedFilters, newValue) => {\r\n  let newFilters = { ...state.filters };\r\n  updatedFilters.forEach( f => newFilters[f] = newValue);\r\n  await AsyncStorage.setItem('filters', JSON.stringify(newFilters));\r\n\r\n  dispatch({ type: 'set_filters', payload: newFilters });\r\n};\r\n\r\n\r\n// id: id (string) of the coin to be updated\r\n// newStatus: 'collected' or 'notCollected'\r\nconst updateCoinStatus = (dispatch, state) => async (id, newStatus) => {\r\n  let newCoinsStatus = [...state.coinsStatus];\r\n  newCoinsStatus = newCoinsStatus.map( c=> \r\n    c.id === id\r\n      ? { ...c, status: newStatus }\r\n      : c\r\n  );\r\n  await AsyncStorage.setItem('coinsStatus', JSON.stringify(newCoinsStatus));\r\n\r\n  dispatch({ type: 'update_coin_status', payload: newCoinsStatus });\r\n};\r\n\r\n\r\n// callback: function called at the end of getInitialData\r\nconst getInitialData = dispatch => async (callback) => {\r\n  let coins;\r\n  let mapUrl = '';\r\n  let isOnline = false;\r\n\r\n  try {\r\n    if (Platform.OS === 'web') {\r\n      // coins and map are always updated in the web version\r\n      coins = require('../../assets/xp_coins.json');\r\n    } else {\r\n      const coinsRef = storage.ref('xp_coins.json');\r\n      const coinsUrl = await coinsRef.getDownloadURL();\r\n      coins = await fetch(coinsUrl);\r\n      coins = await coins.json();\r\n      //throw 'error';\r\n      \r\n      const mapRef = storage.ref('map.jpg');\r\n      mapUrl = await mapRef.getDownloadURL();\r\n      await Image.prefetch(mapUrl);\r\n  }\r\n  \r\n  isOnline = true;\r\n\r\n  } catch (err) {\r\n    coins = require('../../assets/xp_coins.json');\r\n    isOnline = false;\r\n  }\r\n\r\n  let filters = await AsyncStorage.getItem('filters');\r\n  let coinsStatus = await AsyncStorage.getItem('coinsStatus');\r\n\r\n  // WARNING: if AsyncStorage fails when it was not suppose to, it will erase all \r\n  //          coinsStatus create by the user. The login + backup will solve the issue\r\n  if(!filters) filters = JSON.stringify(mapContextInitialState.filters);\r\n  if(!coinsStatus) coinsStatus = JSON.stringify(mapContextInitialState.coinsStatus);\r\n\r\n  filters = JSON.parse(filters);\r\n  coinsStatus = JSON.parse(coinsStatus);\r\n\r\n  // if there are missing coins id in coinsStatus, we create new entries in coinsStatus\r\n  coins.forEach(c => {\r\n    if(!coinsStatus.find(s => s.id === c.id)) {\r\n      coinsStatus.push({\r\n        id: c.id,\r\n        status: 'notCollected'\r\n      });\r\n    }\r\n  });\r\n\r\n  // clean old entries of coinStatus\r\n  const oldestCoinId = Math.min(...coins.map(c => parseInt(c.id)));\r\n  if (oldestCoinId !== Infinity) {\r\n    coinsStatus = coinsStatus.filter(c => parseInt(c.id) >= oldestCoinId);\r\n  }\r\n\r\n  dispatch({ \r\n    type: 'get_initial_data',\r\n    payload: {\r\n      coins,\r\n      filters, \r\n      coinsStatus,\r\n      mapUrl,\r\n      isOnline,\r\n    }   \r\n  });\r\n\r\n  callback();\r\n};\r\n\r\n\r\n// EXPORT\r\nconst mapContextInitialState = {\r\n  isOnline: false,\r\n  mapUrl: '',\r\n  coins: [],\r\n  coinsStatus: [],\r\n  filters: {\r\n    week1: true,\r\n    week2: true,\r\n    week3: true,\r\n    week4: true,\r\n    week5: true,\r\n    week6: true,\r\n    week7: true,\r\n    week8: true,\r\n    week9: true,\r\n    week10: true,\r\n\r\n    green: true,\r\n    blue: true,\r\n    purple: true,\r\n    gold: true,\r\n\r\n    collected: true,\r\n    notCollected: true,\r\n  },\r\n};\r\n\r\nexport const { Provider, Context } = createDataContext(\r\n  mapReducer,\r\n  { setFilters, updateCoinStatus, getInitialData },\r\n  mapContextInitialState\r\n);","//\r\n// Filter is a button that when clicked shows a list of filters as a modal.\r\n// When the user clicks on a filter, it will dispatch the appropriate action funtion \r\n// to activate or deactivate the filter.\r\n//\r\n// type: This string decides which list of filters to show. \r\n//       It must be one of the following: 'week', 'color', 'status'\r\n//\r\n\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { View, StyleSheet, FlatList, Modal, TouchableWithoutFeedback } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem';\r\nimport FilterButton from './FilterButton';\r\nimport { shortDimension } from '../utils/scaling';\r\nimport { Context as MapContext } from '../context/MapContext';\r\nimport { MaterialCommunityIcons, Feather } from '@expo/vector-icons';\r\n\r\nimport { Colors, Sizes } from '../styles';\r\n\r\nconst getFilterData = type => {\r\n  switch (type) {\r\n    case 'week':\r\n      return [\r\n        { id: 'week1', label: 'Semana 1' },\r\n        { id: 'week2', label: 'Semana 2' },\r\n        { id: 'week3', label: 'Semana 3' },\r\n        { id: 'week4', label: 'Semana 4' },\r\n        { id: 'week5', label: 'Semana 5' },\r\n        { id: 'week6', label: 'Semana 6' },\r\n        { id: 'week7', label: 'Semana 7' },\r\n        { id: 'week8', label: 'Semana 8' },\r\n        { id: 'week9', label: 'Semana 9' },\r\n        { id: 'week10', label: 'Semana 10' },\r\n      ];\r\n    case 'color':\r\n      return [\r\n        { id: 'green', label: 'Verde' },\r\n        { id: 'blue', label: 'Azul' },\r\n        { id: 'purple', label: 'Roxa' },\r\n        { id: 'gold', label: 'Dourada' },\r\n      ];\r\n    case 'status':\r\n      return [\r\n        { id: 'collected', label: 'Coletada'},\r\n        { id: 'notCollected', label: 'Não Coletada'},\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\n\r\n\r\nconst Filter = ({ type }) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n  const { state: { filters, coins },  setFilters } = useContext(MapContext)\r\n\r\n  const filterData = getFilterData(type);\r\n  const availableWeeks = coins.map(c => c.week);\r\n\r\n  let headerLabel;\r\n  let iconButton;\r\n  switch (type) {\r\n    case 'week':\r\n      headerLabel = 'Semanas';\r\n      iconButton = <Feather name='calendar' size={20} color={Colors.ON_HEADER}/>;\r\n      break;\r\n    case 'color':\r\n      headerLabel = 'Cores';\r\n      iconButton = <MaterialCommunityIcons name='palette-outline' size={20} color={Colors.ON_HEADER}/>;\r\n      break;\r\n    case 'status':\r\n      headerLabel = 'Status';\r\n      iconButton = <Feather name='check' size={20} color={Colors.ON_HEADER}/>;\r\n      break;\r\n    default:\r\n      headerLabel = '';\r\n      iconButton = null;\r\n      break;\r\n  }\r\n  \r\n  const renderHeader = () => {\r\n    const deactivatedFilters = filterData.filter( item => !filters[item.id]);\r\n    const newFilterValue = deactivatedFilters.length === 0 ? false : true;\r\n    const filtersToUpdate = filterData.map(f => f.id);\r\n\r\n    return <FilterItem \r\n            header\r\n            checked={!newFilterValue}\r\n            label={headerLabel}\r\n            onPressIcon={() => setFilters(filtersToUpdate, newFilterValue)}\r\n          />;\r\n  };\r\n  \r\n  const renderItem = ({ item, index }) => {\r\n    const checked = filters[item.id];\r\n    return type === 'week' && !availableWeeks.includes(item.id)\r\n            ? null\r\n            : <FilterItem\r\n                label={item.label}\r\n                last={index === filterData.length-1}\r\n                checked={checked}\r\n                onPress={() => setFilters([item.id], !checked)}\r\n                onPressIcon={() => setFilters([item.id], !checked)}\r\n              />\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex:1 }}>\r\n      <FilterButton\r\n        label={headerLabel}\r\n        onPress={() => setVisibility(true)}\r\n        iconButton={iconButton}\r\n      />\r\n      <Modal\r\n        visible={visibility}\r\n        transparent\r\n        animationType='slide'\r\n        onRequestClose={() => setVisibility(false)}\r\n      >\r\n        <TouchableWithoutFeedback onPress={() => setVisibility(false)}>\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modalSurface}>\r\n              {renderHeader()}\r\n              <FlatList\r\n                renderItem={renderItem}\r\n                data={filterData}\r\n                keyExtractor={item => item.id}\r\n              />\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  types: PropTypes.oneOf(['week', 'color', 'status']),\r\n};\r\n\r\nFilter.defaultProps = {\r\n  type: 'week',\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: Colors.MODAL_BACKGROUND,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modalSurface: {\r\n    backgroundColor: Colors.SURFACE,\r\n    borderRadius: Sizes.BORDER_RADIUS,\r\n    width: shortDimension * 0.70,\r\n  },\r\n});\r\n\r\nexport default Filter;\r\n","//\r\n// This function return the appropriate \"require(...)\" given a name\r\n// We use it, because \"require\" does not allow template strings as argument\r\n//\r\n\r\nexport const requireImage = (name) => {\r\n  switch (name) {\r\n    case 'xp_coin_green_notCollected':\r\n      return require('../../assets/images/xp_coin_green_notCollected.png');\r\n    case 'xp_coin_blue_notCollected':\r\n      return require('../../assets/images/xp_coin_blue_notCollected.png');\r\n    case 'xp_coin_purple_notCollected':\r\n      return require('../../assets/images/xp_coin_purple_notCollected.png');\r\n    case 'xp_coin_gold_notCollected':\r\n      return require('../../assets/images/xp_coin_gold_notCollected.png');\r\n    case 'xp_coin_green_collected':\r\n      return require('../../assets/images/xp_coin_green_collected.png');\r\n    case 'xp_coin_blue_collected':\r\n      return require('../../assets/images/xp_coin_blue_collected.png');\r\n    case 'xp_coin_purple_collected':\r\n      return require('../../assets/images/xp_coin_purple_collected.png');\r\n    case 'xp_coin_gold_collected':\r\n      return require('../../assets/images/xp_coin_gold_collected.png');\r\n    default:\r\n      return null;\r\n  }\r\n};","//\r\n// XpCoins is used in Map to display all xp coins as clickable images\r\n//\r\n// mapZoomLevel: it is the zoom level used in Map. \r\n//               It is used to reverse the scaling set in Map, so the xp coin images have a constant size\r\n//\r\n\r\nimport React, { useContext } from 'react';\r\nimport { StyleSheet, Image } from 'react-native';\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { Context as MapContext } from \"../context/MapContext\";\r\n\r\nimport { Sizes } from \"../styles\";\r\n\r\nimport { requireImage } from '../utils/requireImage';\r\nimport { getInAppCoinPosition } from '../utils/getInAppCoinPosition';\r\n\r\n\r\nconst XpCoins = ({ mapZoomLevel }) => {\r\n  const { state: { coins, coinsStatus, filters }, updateCoinStatus } = useContext(MapContext);\r\n\r\n  const renderCoin = coin => {\r\n    const status = coinsStatus.find(c => {return c.id === coin.id;}).status;\r\n    const newStatusOnPress = status === 'collected' ? 'notCollected' : 'collected';\r\n\r\n    const [convertedLeft, convertedTop] = getInAppCoinPosition(coin.coords.left, coin.coords.top, mapZoomLevel);\r\n\r\n    return(\r\n      filters[coin.color] && filters[coin.week] && filters[status]\r\n      ? (<TouchableOpacity \r\n        style={[styles.container, { left: convertedLeft, top: convertedTop }]} \r\n        onPress={()=> updateCoinStatus(coin.id, newStatusOnPress)}\r\n        key={coin.id}\r\n        >\r\n          <Image \r\n            style={[\r\n              styles.xpCoin,\r\n              { width: Sizes.COIN_BASE_WIDTH / mapZoomLevel, height: Sizes.COIN_BASE_HEIGHT / mapZoomLevel }\r\n             ]}\r\n            source={requireImage(`xp_coin_${coin.color}_${status}`)}\r\n          />\r\n        </TouchableOpacity>)\r\n      : null\r\n    );\r\n  };\r\n  \r\n\r\n  return coins.map(renderCoin);\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'absolute',\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n    zIndex: 1,\r\n  },\r\n  xpCoin: {\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n  }\r\n});\r\n\r\nexport default XpCoins;\r\n","//\r\n// This function converts the coin position downloaded from the firebase storage\r\n// to the coin position used in the user's device.\r\n//\r\n// The downloaded position is determined from the pixel that locates the coin in\r\n// an image of size 1023x1023. However, the user's device won't show a image 1023x1023,\r\n// it will scale it. \"getInAppCoinPostion\" takes care of the conversion needed to\r\n// show the coin image in the appropriate position.\r\n// \r\n\r\nimport { PixelRatio } from 'react-native';\r\nimport { Sizes } from '../styles';\r\n\r\nexport const getInAppCoinPosition = (x, y, mapZoomLevel) => {\r\n  \r\n  const pxRatio = PixelRatio.get();\r\n\r\n  const mapSizePx = 1023;\r\n  \r\n  // here we don't multiply by mapZoomLevel, because when we zoom-in\r\n  // we do not set a new size for the map, we use a \"transform scale = 2\"\r\n  const scale = Sizes.MAP_BASE_SIZE/mapSizePx/pxRatio;\r\n  let xApp = x*pxRatio*scale;\r\n  let yApp = y*pxRatio*scale;\r\n\r\n  // translation\r\n  // here we use mapZoomLevel, because we change the size of the icon\r\n  xApp = xApp - Sizes.COIN_BASE_WIDTH / mapZoomLevel / 2;\r\n  yApp = yApp - Sizes.COIN_BASE_HEIGHT / mapZoomLevel;\r\n\r\n  return [xApp, yApp]\r\n};","//\r\n// Map is the draggable map shown in MapScreen. It includes the XP coins.\r\n//\r\n// zoomLevel: It is a number that scales the map and the xp coins\r\n// source:    It is the string that represents the source used for the image of the map.\r\n//            It may be an firebase url or a relative path\r\n//\r\n\r\nimport React, { useRef } from 'react';\r\nimport { View, StyleSheet, Image, Animated, PanResponder } from 'react-native';\r\n\r\nimport { Sizes } from \"../styles\";\r\nimport XpCoins from './XpCoins';\r\n\r\n\r\nconst Map = ({ zoomLevel, source }) => {\r\n  const pan = useRef(new Animated.ValueXY({x: 0, y: 0})).current;\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onMoveShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        pan.setOffset({\r\n          x: pan.x._value,\r\n          y: pan.y._value\r\n        });\r\n        pan.setValue({ x: 0, y: 0 }); // to prevent the \"position x2\" bug\r\n      },\r\n      //onPanResponderMove: (event, gesture) => {\r\n      //  pan.setValue({ x: gesture.dx, y: gesture.dy });\r\n      //},\r\n      onPanResponderMove: Animated.event(\r\n        [\r\n          null,\r\n          { dx: pan.x, dy: pan.y }\r\n        ],\r\n        { useNativeDriver: false }\r\n      ),\r\n      onPanResponderRelease: () => {\r\n        pan.flattenOffset();\r\n      }\r\n    })\r\n  ).current;\r\n  \r\n  return (\r\n    <Animated.View\r\n        style={[\r\n          styles.container,\r\n          { transform: [{ translateX: pan.x }, { translateY: pan.y }, { scale: zoomLevel }] }\r\n        ]}\r\n        {...panResponder.panHandlers}\r\n    >\r\n      <View>\r\n        <Image \r\n          resizeMode='contain'\r\n          style={styles.map}\r\n          source={source}\r\n          />\r\n        <XpCoins mapZoomLevel={zoomLevel}/>\r\n      </View>\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n  },\r\n  map: {\r\n    width: Sizes.MAP_BASE_SIZE,\r\n    height: Sizes.MAP_BASE_SIZE,\r\n  }\r\n});\r\n\r\nexport default Map;\r\n","//\r\n// RoundButton is a circular button.\r\n//\r\n// icon:    It is the name (string) of a icon from Feather\r\n// onPress: It is the function called when the button is clicked\r\n//\r\n\r\nimport React from 'react';\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\nimport { Colors, Sizes  } from \"../styles\";\r\n\r\n\r\nconst RoundButton = ({ icon, onPress }) => {\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={styles.container}>\r\n        <Feather name={icon} size={Sizes.ICON_ROUND_BUTTON} color={Colors.ON_HEADER}/>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nRoundButton.defaultProps = {\r\n  icon: 'zoom-in',\r\n  onPress: () => {},\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: Sizes.ROUND_BUTTON,\r\n    height: Sizes.ROUND_BUTTON,\r\n    borderRadius: 100, // high value to fully round the sides of the button\r\n    backgroundColor: Colors.BUTTON,\r\n    ...Sizes.SHADOW,\r\n  },\r\n});\r\n\r\nexport default RoundButton;\r\n","//\r\n// InfoButton is the button that wll show the Epic Games default disclaimer\r\n//\r\n\r\nimport React, { useState } from 'react';\r\nimport { Text, View, StyleSheet, Modal, TouchableWithoutFeedback } from 'react-native';\r\n\r\nimport { Colors, Typography, Sizes  } from \"../styles\";\r\nimport { shortDimension } from '../utils/scaling';\r\nimport RoundButton from './RoundButton';\r\n\r\n\r\nconst InfoButton = () => {\r\nconst [visibility, setVisibility] = useState(false);\r\n\r\n  return (\r\n    <View style={{ flex:1 }}>\r\n      <RoundButton\r\n        icon='info'\r\n        onPress={() => setVisibility(true)}\r\n      />\r\n      <Modal\r\n        visible={visibility}\r\n        transparent\r\n        animationType='slide'\r\n        onRequestClose={() => setVisibility(false)}\r\n      >\r\n        <TouchableWithoutFeedback onPress={() => setVisibility(false)}>\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modalSurface}>\r\n            <Text style={styles.text}>\r\n              Partes dos materiais utilizados são marcas comerciais e/ou obras com direitos autorais da Epic Games, Inc. Todos os direitos reservados pela Epic. Este material não é oficial e não é endossado pela Epic.\r\n            </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nInfoButton.defaultProps = {\r\n  icon: 'zoom-in',\r\n  onPress: () => {},\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: Colors.MODAL_BACKGROUND,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modalSurface: {\r\n    backgroundColor: Colors.SURFACE,\r\n    borderRadius: Sizes.BORDER_RADIUS,\r\n    width: shortDimension * 0.70,\r\n    padding: Sizes.BASE_SPACING,\r\n  },\r\n  text: {\r\n    ...Typography.FILTER_ITEM,\r\n    textAlign: 'center',\r\n  }\r\n});\r\n\r\nexport default InfoButton;\r\n","//\r\n// MapScreen is the screen that shows the map, filters and xp coins\r\n// It is the main screen of our app.\r\n//\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { Text, StyleSheet, Platform, View } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Filter from '../components/Filter';\r\nimport { Sizes, Colors, Typography } from '../styles';\r\nimport Map from '../components/Map';\r\nimport RoundButton from '../components/RoundButton';\r\nimport InfoButton from '../components/InfoButton';\r\nimport { Context as MapContext } from '../context/MapContext';\r\n\r\nconst MapScreen = () => {\r\n  const [zoomLevel, setZoomLevel] = useState(1);\r\n  const { state: { mapUrl, isOnline } } = useContext(MapContext);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.screenContainer}>\r\n      <View style={{ flex:1 }}>\r\n        <Map \r\n          zoomLevel={zoomLevel}\r\n          source={mapUrl ? {uri: mapUrl} : require('../../assets/images/map.png')}\r\n        />\r\n        <View style={styles.infoContainer}>\r\n          <InfoButton />\r\n        </View>\r\n        <View style={styles.bottomButtonsContainer}>\r\n          <View style={styles.zoomContainer}>\r\n            <RoundButton icon='zoom-in' onPress={() => setZoomLevel(2)}/>\r\n          </View>\r\n          <View style={styles.offlineZoomContainer}>\r\n            { isOnline \r\n              ? null \r\n              : <View style={styles.offlineContainer}>\r\n                  <Text style={styles.offlineTextStyle}>\r\n                    {'Offline: mapa e moedas podem estar desatualizados.'}\r\n                  </Text>\r\n                </View>\r\n            }\r\n            <View style={styles.zoomContainer}>\r\n              <RoundButton icon='zoom-out' onPress={() => setZoomLevel(1)}/>\r\n            </View>\r\n          </View>\r\n          <View style={styles.filtersContainer}>\r\n              <Filter type='week'/>\r\n              <Filter type='color'/>\r\n              <Filter type='status'/>  \r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screenContainer: {\r\n    flex: 1,\r\n    backgroundColor: Colors.BACKGROUND,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n  },\r\n  bottomButtonsContainer: {\r\n    position: 'absolute',\r\n    bottom: 0, \r\n    right: 0,\r\n    left: 0\r\n  },\r\n  infoContainer: {\r\n    position: 'absolute',\r\n    top: Sizes.BASE_SPACING,\r\n    right: Sizes.BASE_SPACING,\r\n    zIndex: 1,\r\n  },\r\n  filtersContainer: {\r\n    flexDirection: 'row',\r\n    paddingLeft: Sizes.BASE_SPACING,\r\n    paddingTop: Sizes.BASE_SPACING,\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n  },\r\n  offlineZoomContainer: {\r\n    flexDirection: 'row',\r\n    paddingLeft: Sizes.BASE_SPACING,\r\n    justifyContent: 'flex-end',\r\n    //borderColor: 'red',\r\n    //borderWidth: 1,\r\n  },\r\n  offlineContainer: {\r\n    flex:1,\r\n    alignSelf: 'flex-end',\r\n    //borderColor: 'white',\r\n    //borderWidth: 1,\r\n  },\r\n  offlineTextStyle: {\r\n    ...Typography.BUTTON,\r\n  },\r\n  zoomContainer: {\r\n    alignSelf: 'flex-end',\r\n    marginTop: Sizes.BASE_SPACING,\r\n    marginRight: Sizes.BASE_SPACING,\r\n    //borderColor: 'green',\r\n    //borderWidth: 1,\r\n  },\r\n  \r\n});\r\n\r\nexport default MapScreen;\r\n\r\n","//\r\n// SplashScreen is just a screen showed, while the app is not yet \r\n// ready to show MapScreen\r\n//\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, ActivityIndicator } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Colors } from '../styles';\r\n\r\n\r\nconst SplashScreen = () => {\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.screenContainer}>\r\n      <ActivityIndicator size='large'  color=\"#fff\"/>\r\n    </SafeAreaView>\r\n  );\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screenContainer: {\r\n    flex: 1,\r\n    backgroundColor: Colors.BACKGROUND,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default SplashScreen;\r\n","import React, { useState, useContext, useEffect } from 'react'\nimport MapScreen from './src/screens/MapScreen';\nimport SplashScreen from './src/screens/SplashScreen';\nimport { Provider as MapProvider, Context as MapContext } from './src/context/MapContext';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useFonts, LuckiestGuy_400Regular  } from '@expo-google-fonts/luckiest-guy';\nimport AsyncStorage from '@react-native-community/async-storage';\n\n// disable warning from firebase sdk bug\nimport { LogBox, Platform } from 'react-native';\nif(Platform.OS === 'android') LogBox.ignoreLogs(['Setting a timer for a long']);\n\nconst App = () => {\n  const [initialDataLoaded, setInitialDataLoaded] = useState(false);\n  const { getInitialData } = useContext(MapContext);\n  let [fontsLoaded] = useFonts({ LuckiestGuy_400Regular });\n  \n\n  useEffect(() => {\n    if(Platform.OS === 'web') document.body.style = \"position:fixed!important\";\n    getInitialData(() => setInitialDataLoaded(true));\n    //AsyncStorage.clear();\n  }, []);\n\n  return initialDataLoaded && fontsLoaded ? <MapScreen/> : <SplashScreen/>;\n};\n\nexport default () => {\n  return <SafeAreaProvider>\n    <MapProvider>\n      <App/>\n    </MapProvider>\n  </SafeAreaProvider>\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/fortnite_xp_coins/expo-service-worker.js', { scope: '/fortnite_xp_coins/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/xp_coin_green_notCollected.a364a800.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_blue_notCollected.a027f0cc.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_purple_notCollected.c3a0a077.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_gold_notCollected.10ba257a.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_green_collected.50593279.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_blue_collected.8bb0a00a.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_purple_collected.edaaf9d4.png\";","module.exports = __webpack_public_path__ + \"static/media/xp_coin_gold_collected.5f251171.png\";","module.exports = __webpack_public_path__ + \"static/media/map.3655df58.png\";"],"sourceRoot":""}